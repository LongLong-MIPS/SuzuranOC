$date
	Thu Apr 21 07:54:08 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var wire 7 ! seg [6:0] $end
$var wire 8 " ans [7:0] $end
$var reg 1 # clk $end
$var reg 8 $ num1 [7:0] $end
$var reg 3 % op [2:0] $end
$var reg 1 & rst $end
$scope module test $end
$var wire 1 # clk $end
$var wire 8 ' num1 [7:0] $end
$var wire 3 ( op [2:0] $end
$var wire 1 & rst $end
$var wire 7 ) seg [6:0] $end
$var wire 32 * s [31:0] $end
$var wire 8 + ans [7:0] $end
$scope module U1 $end
$var wire 8 , num1 [7:0] $end
$var wire 32 - num2 [31:0] $end
$var wire 3 . op [2:0] $end
$var wire 32 / result [31:0] $end
$var wire 32 0 Sign_extend [31:0] $end
$upscope $end
$scope module U2 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 32 1 s [31:0] $end
$var wire 7 2 seg [6:0] $end
$var reg 8 3 ans [7:0] $end
$var reg 21 4 count [20:0] $end
$var reg 5 5 digit [4:0] $end
$scope module U4 $end
$var wire 4 6 din [3:0] $end
$var reg 7 7 dout [6:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 7
bx 6
bx 5
b0 4
bx 3
bx 2
b1 1
b10 0
b1 /
b1 .
b1 -
b10 ,
bx +
b1 *
bx )
b1 (
b10 '
1&
b1 %
b10 $
0#
bx "
bx !
$end
#1
0&
#5
b1001111 !
b1001111 )
b1001111 2
b1001111 7
b1 6
b1 5
b11111110 "
b11111110 +
b11111110 3
b1 4
1#
#10
0#
#15
b10 4
1#
#20
0#
#25
b11 4
1#
#30
0#
#35
b100 4
1#
#40
0#
#45
b101 4
1#
#50
0#
#55
b110 4
1#
#60
0#
#65
b111 4
1#
#70
0#
#75
b1000 4
1#
#80
0#
#85
b1001 4
1#
#90
0#
#95
b1010 4
1#
#100
0#
#101
